/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.bysoftware.ct.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import it.bysoftware.ct.model.Progressivo;
import it.bysoftware.ct.model.ProgressivoModel;
import it.bysoftware.ct.model.ProgressivoSoap;
import it.bysoftware.ct.service.persistence.ProgressivoPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Progressivo service. Represents a row in the &quot;ProgAnnFor&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.bysoftware.ct.model.ProgressivoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProgressivoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ProgressivoImpl
 * @see it.bysoftware.ct.model.Progressivo
 * @see it.bysoftware.ct.model.ProgressivoModel
 * @generated
 */
@JSON(strict = true)
public class ProgressivoModelImpl extends BaseModelImpl<Progressivo>
	implements ProgressivoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a progressivo model instance should use the {@link it.bysoftware.ct.model.Progressivo} interface instead.
	 */
	public static final String TABLE_NAME = "ProgAnnFor";
	public static final Object[][] TABLE_COLUMNS = {
			{ "Re4Anno", Types.INTEGER },
			{ "Re4Codatt", Types.BIGINT },
			{ "Re4Codcen", Types.VARCHAR },
			{ "Re4Coddep", Types.VARCHAR },
			{ "Re4Datreg", Types.VARCHAR },
			{ "Re4Nuboll", Types.BIGINT },
			{ "Re4Numcon", Types.INTEGER },
			{ "Re4Prgcon", Types.INTEGER },
			{ "Re4Tipcon", Types.INTEGER },
			{ "Re4Codiaz", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table ProgAnnFor (Re4Anno INTEGER not null,Re4Codatt LONG not null,Re4Codcen VARCHAR(75) null,Re4Coddep VARCHAR(75) null,Re4Datreg VARCHAR(75) null,Re4Nuboll LONG,Re4Numcon INTEGER not null,Re4Prgcon INTEGER not null,Re4Tipcon INTEGER,Re4Codiaz VARCHAR(75) null,primary key (Re4Anno, Re4Codatt, Re4Numcon, Re4Prgcon))";
	public static final String TABLE_SQL_DROP = "drop table ProgAnnFor";
	public static final String ORDER_BY_JPQL = " ORDER BY progressivo.id.anno ASC, progressivo.id.idAssociato ASC, progressivo.id.tipoDocumento ASC, progressivo.id.numeroProgressivo ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ProgAnnFor.Re4Anno ASC, ProgAnnFor.Re4Codatt ASC, ProgAnnFor.Re4Numcon ASC, ProgAnnFor.Re4Prgcon ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.bysoftware.ct.model.Progressivo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.bysoftware.ct.model.Progressivo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.bysoftware.ct.model.Progressivo"),
			true);
	public static long ANNO_COLUMN_BITMASK = 1L;
	public static long IDASSOCIATO_COLUMN_BITMASK = 2L;
	public static long TIPODOCUMENTO_COLUMN_BITMASK = 4L;
	public static long NUMEROPROGRESSIVO_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Progressivo toModel(ProgressivoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Progressivo model = new ProgressivoImpl();

		model.setAnno(soapModel.getAnno());
		model.setIdAssociato(soapModel.getIdAssociato());
		model.setCodiceCentro(soapModel.getCodiceCentro());
		model.setCodiceDeposito(soapModel.getCodiceDeposito());
		model.setDataRegistrazione(soapModel.getDataRegistrazione());
		model.setNumeroBolla(soapModel.getNumeroBolla());
		model.setTipoDocumento(soapModel.getTipoDocumento());
		model.setNumeroProgressivo(soapModel.getNumeroProgressivo());
		model.setTipoCon(soapModel.getTipoCon());
		model.setCodiceAzienda(soapModel.getCodiceAzienda());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Progressivo> toModels(ProgressivoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Progressivo> models = new ArrayList<Progressivo>(soapModels.length);

		for (ProgressivoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.bysoftware.ct.model.Progressivo"));

	public ProgressivoModelImpl() {
	}

	@Override
	public ProgressivoPK getPrimaryKey() {
		return new ProgressivoPK(_anno, _idAssociato, _tipoDocumento,
			_numeroProgressivo);
	}

	@Override
	public void setPrimaryKey(ProgressivoPK primaryKey) {
		setAnno(primaryKey.anno);
		setIdAssociato(primaryKey.idAssociato);
		setTipoDocumento(primaryKey.tipoDocumento);
		setNumeroProgressivo(primaryKey.numeroProgressivo);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ProgressivoPK(_anno, _idAssociato, _tipoDocumento,
			_numeroProgressivo);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ProgressivoPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return Progressivo.class;
	}

	@Override
	public String getModelClassName() {
		return Progressivo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("anno", getAnno());
		attributes.put("idAssociato", getIdAssociato());
		attributes.put("codiceCentro", getCodiceCentro());
		attributes.put("codiceDeposito", getCodiceDeposito());
		attributes.put("dataRegistrazione", getDataRegistrazione());
		attributes.put("numeroBolla", getNumeroBolla());
		attributes.put("tipoDocumento", getTipoDocumento());
		attributes.put("numeroProgressivo", getNumeroProgressivo());
		attributes.put("tipoCon", getTipoCon());
		attributes.put("codiceAzienda", getCodiceAzienda());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer anno = (Integer)attributes.get("anno");

		if (anno != null) {
			setAnno(anno);
		}

		Long idAssociato = (Long)attributes.get("idAssociato");

		if (idAssociato != null) {
			setIdAssociato(idAssociato);
		}

		String codiceCentro = (String)attributes.get("codiceCentro");

		if (codiceCentro != null) {
			setCodiceCentro(codiceCentro);
		}

		String codiceDeposito = (String)attributes.get("codiceDeposito");

		if (codiceDeposito != null) {
			setCodiceDeposito(codiceDeposito);
		}

		String dataRegistrazione = (String)attributes.get("dataRegistrazione");

		if (dataRegistrazione != null) {
			setDataRegistrazione(dataRegistrazione);
		}

		Long numeroBolla = (Long)attributes.get("numeroBolla");

		if (numeroBolla != null) {
			setNumeroBolla(numeroBolla);
		}

		Integer tipoDocumento = (Integer)attributes.get("tipoDocumento");

		if (tipoDocumento != null) {
			setTipoDocumento(tipoDocumento);
		}

		Integer numeroProgressivo = (Integer)attributes.get("numeroProgressivo");

		if (numeroProgressivo != null) {
			setNumeroProgressivo(numeroProgressivo);
		}

		Integer tipoCon = (Integer)attributes.get("tipoCon");

		if (tipoCon != null) {
			setTipoCon(tipoCon);
		}

		String codiceAzienda = (String)attributes.get("codiceAzienda");

		if (codiceAzienda != null) {
			setCodiceAzienda(codiceAzienda);
		}
	}

	@JSON
	@Override
	public int getAnno() {
		return _anno;
	}

	@Override
	public void setAnno(int anno) {
		_columnBitmask |= ANNO_COLUMN_BITMASK;

		if (!_setOriginalAnno) {
			_setOriginalAnno = true;

			_originalAnno = _anno;
		}

		_anno = anno;
	}

	public int getOriginalAnno() {
		return _originalAnno;
	}

	@JSON
	@Override
	public long getIdAssociato() {
		return _idAssociato;
	}

	@Override
	public void setIdAssociato(long idAssociato) {
		_columnBitmask |= IDASSOCIATO_COLUMN_BITMASK;

		if (!_setOriginalIdAssociato) {
			_setOriginalIdAssociato = true;

			_originalIdAssociato = _idAssociato;
		}

		_idAssociato = idAssociato;
	}

	public long getOriginalIdAssociato() {
		return _originalIdAssociato;
	}

	@JSON
	@Override
	public String getCodiceCentro() {
		if (_codiceCentro == null) {
			return StringPool.BLANK;
		}
		else {
			return _codiceCentro;
		}
	}

	@Override
	public void setCodiceCentro(String codiceCentro) {
		_codiceCentro = codiceCentro;
	}

	@JSON
	@Override
	public String getCodiceDeposito() {
		if (_codiceDeposito == null) {
			return StringPool.BLANK;
		}
		else {
			return _codiceDeposito;
		}
	}

	@Override
	public void setCodiceDeposito(String codiceDeposito) {
		_codiceDeposito = codiceDeposito;
	}

	@JSON
	@Override
	public String getDataRegistrazione() {
		if (_dataRegistrazione == null) {
			return StringPool.BLANK;
		}
		else {
			return _dataRegistrazione;
		}
	}

	@Override
	public void setDataRegistrazione(String dataRegistrazione) {
		_dataRegistrazione = dataRegistrazione;
	}

	@JSON
	@Override
	public long getNumeroBolla() {
		return _numeroBolla;
	}

	@Override
	public void setNumeroBolla(long numeroBolla) {
		_numeroBolla = numeroBolla;
	}

	@JSON
	@Override
	public int getTipoDocumento() {
		return _tipoDocumento;
	}

	@Override
	public void setTipoDocumento(int tipoDocumento) {
		_columnBitmask |= TIPODOCUMENTO_COLUMN_BITMASK;

		if (!_setOriginalTipoDocumento) {
			_setOriginalTipoDocumento = true;

			_originalTipoDocumento = _tipoDocumento;
		}

		_tipoDocumento = tipoDocumento;
	}

	public int getOriginalTipoDocumento() {
		return _originalTipoDocumento;
	}

	@JSON
	@Override
	public int getNumeroProgressivo() {
		return _numeroProgressivo;
	}

	@Override
	public void setNumeroProgressivo(int numeroProgressivo) {
		_numeroProgressivo = numeroProgressivo;
	}

	@JSON
	@Override
	public int getTipoCon() {
		return _tipoCon;
	}

	@Override
	public void setTipoCon(int tipoCon) {
		_tipoCon = tipoCon;
	}

	@JSON
	@Override
	public String getCodiceAzienda() {
		if (_codiceAzienda == null) {
			return StringPool.BLANK;
		}
		else {
			return _codiceAzienda;
		}
	}

	@Override
	public void setCodiceAzienda(String codiceAzienda) {
		_codiceAzienda = codiceAzienda;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Progressivo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Progressivo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProgressivoImpl progressivoImpl = new ProgressivoImpl();

		progressivoImpl.setAnno(getAnno());
		progressivoImpl.setIdAssociato(getIdAssociato());
		progressivoImpl.setCodiceCentro(getCodiceCentro());
		progressivoImpl.setCodiceDeposito(getCodiceDeposito());
		progressivoImpl.setDataRegistrazione(getDataRegistrazione());
		progressivoImpl.setNumeroBolla(getNumeroBolla());
		progressivoImpl.setTipoDocumento(getTipoDocumento());
		progressivoImpl.setNumeroProgressivo(getNumeroProgressivo());
		progressivoImpl.setTipoCon(getTipoCon());
		progressivoImpl.setCodiceAzienda(getCodiceAzienda());

		progressivoImpl.resetOriginalValues();

		return progressivoImpl;
	}

	@Override
	public int compareTo(Progressivo progressivo) {
		ProgressivoPK primaryKey = progressivo.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Progressivo)) {
			return false;
		}

		Progressivo progressivo = (Progressivo)obj;

		ProgressivoPK primaryKey = progressivo.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		ProgressivoModelImpl progressivoModelImpl = this;

		progressivoModelImpl._originalAnno = progressivoModelImpl._anno;

		progressivoModelImpl._setOriginalAnno = false;

		progressivoModelImpl._originalIdAssociato = progressivoModelImpl._idAssociato;

		progressivoModelImpl._setOriginalIdAssociato = false;

		progressivoModelImpl._originalTipoDocumento = progressivoModelImpl._tipoDocumento;

		progressivoModelImpl._setOriginalTipoDocumento = false;

		progressivoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Progressivo> toCacheModel() {
		ProgressivoCacheModel progressivoCacheModel = new ProgressivoCacheModel();

		progressivoCacheModel.anno = getAnno();

		progressivoCacheModel.idAssociato = getIdAssociato();

		progressivoCacheModel.codiceCentro = getCodiceCentro();

		String codiceCentro = progressivoCacheModel.codiceCentro;

		if ((codiceCentro != null) && (codiceCentro.length() == 0)) {
			progressivoCacheModel.codiceCentro = null;
		}

		progressivoCacheModel.codiceDeposito = getCodiceDeposito();

		String codiceDeposito = progressivoCacheModel.codiceDeposito;

		if ((codiceDeposito != null) && (codiceDeposito.length() == 0)) {
			progressivoCacheModel.codiceDeposito = null;
		}

		progressivoCacheModel.dataRegistrazione = getDataRegistrazione();

		String dataRegistrazione = progressivoCacheModel.dataRegistrazione;

		if ((dataRegistrazione != null) && (dataRegistrazione.length() == 0)) {
			progressivoCacheModel.dataRegistrazione = null;
		}

		progressivoCacheModel.numeroBolla = getNumeroBolla();

		progressivoCacheModel.tipoDocumento = getTipoDocumento();

		progressivoCacheModel.numeroProgressivo = getNumeroProgressivo();

		progressivoCacheModel.tipoCon = getTipoCon();

		progressivoCacheModel.codiceAzienda = getCodiceAzienda();

		String codiceAzienda = progressivoCacheModel.codiceAzienda;

		if ((codiceAzienda != null) && (codiceAzienda.length() == 0)) {
			progressivoCacheModel.codiceAzienda = null;
		}

		return progressivoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{anno=");
		sb.append(getAnno());
		sb.append(", idAssociato=");
		sb.append(getIdAssociato());
		sb.append(", codiceCentro=");
		sb.append(getCodiceCentro());
		sb.append(", codiceDeposito=");
		sb.append(getCodiceDeposito());
		sb.append(", dataRegistrazione=");
		sb.append(getDataRegistrazione());
		sb.append(", numeroBolla=");
		sb.append(getNumeroBolla());
		sb.append(", tipoDocumento=");
		sb.append(getTipoDocumento());
		sb.append(", numeroProgressivo=");
		sb.append(getNumeroProgressivo());
		sb.append(", tipoCon=");
		sb.append(getTipoCon());
		sb.append(", codiceAzienda=");
		sb.append(getCodiceAzienda());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("it.bysoftware.ct.model.Progressivo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>anno</column-name><column-value><![CDATA[");
		sb.append(getAnno());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idAssociato</column-name><column-value><![CDATA[");
		sb.append(getIdAssociato());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codiceCentro</column-name><column-value><![CDATA[");
		sb.append(getCodiceCentro());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codiceDeposito</column-name><column-value><![CDATA[");
		sb.append(getCodiceDeposito());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dataRegistrazione</column-name><column-value><![CDATA[");
		sb.append(getDataRegistrazione());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numeroBolla</column-name><column-value><![CDATA[");
		sb.append(getNumeroBolla());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoDocumento</column-name><column-value><![CDATA[");
		sb.append(getTipoDocumento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numeroProgressivo</column-name><column-value><![CDATA[");
		sb.append(getNumeroProgressivo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoCon</column-name><column-value><![CDATA[");
		sb.append(getTipoCon());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codiceAzienda</column-name><column-value><![CDATA[");
		sb.append(getCodiceAzienda());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Progressivo.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Progressivo.class
		};
	private int _anno;
	private int _originalAnno;
	private boolean _setOriginalAnno;
	private long _idAssociato;
	private long _originalIdAssociato;
	private boolean _setOriginalIdAssociato;
	private String _codiceCentro;
	private String _codiceDeposito;
	private String _dataRegistrazione;
	private long _numeroBolla;
	private int _tipoDocumento;
	private int _originalTipoDocumento;
	private boolean _setOriginalTipoDocumento;
	private int _numeroProgressivo;
	private int _tipoCon;
	private String _codiceAzienda;
	private long _columnBitmask;
	private Progressivo _escapedModel;
}