/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.bysoftware.ct.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import it.bysoftware.ct.model.Porto;
import it.bysoftware.ct.model.PortoModel;
import it.bysoftware.ct.model.PortoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Porto service. Represents a row in the &quot;Porto&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.bysoftware.ct.model.PortoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PortoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PortoImpl
 * @see it.bysoftware.ct.model.Porto
 * @see it.bysoftware.ct.model.PortoModel
 * @generated
 */
@JSON(strict = true)
public class PortoModelImpl extends BaseModelImpl<Porto> implements PortoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a porto model instance should use the {@link it.bysoftware.ct.model.Porto} interface instead.
	 */
	public static final String TABLE_NAME = "Porto";
	public static final Object[][] TABLE_COLUMNS = {
			{ "RdeCdinco", Types.VARCHAR },
			{ "RdeCoddes", Types.VARCHAR },
			{ "RdeDescri", Types.VARCHAR },
			{ "RdeIncoterm", Types.VARCHAR },
			{ "RdeCodiaz", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Porto (RdeCdinco VARCHAR(75) null,RdeCoddes VARCHAR(75) not null primary key,RdeDescri VARCHAR(75) null,RdeIncoterm VARCHAR(75) null,RdeCodiaz VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Porto";
	public static final String ORDER_BY_JPQL = " ORDER BY porto.codicePorto ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Porto.RdeCoddes ASC";
	public static final String DATA_SOURCE = "gestionaleOPDataSource";
	public static final String SESSION_FACTORY = "gestionaleOPSessionFactory";
	public static final String TX_MANAGER = "gestionaleOPTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.bysoftware.ct.model.Porto"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.bysoftware.ct.model.Porto"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Porto toModel(PortoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Porto model = new PortoImpl();

		model.setCdinco(soapModel.getCdinco());
		model.setCodicePorto(soapModel.getCodicePorto());
		model.setDescrizione(soapModel.getDescrizione());
		model.setIncoterm(soapModel.getIncoterm());
		model.setCodiceAzienda(soapModel.getCodiceAzienda());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Porto> toModels(PortoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Porto> models = new ArrayList<Porto>(soapModels.length);

		for (PortoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.bysoftware.ct.model.Porto"));

	public PortoModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _codicePorto;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setCodicePorto(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _codicePorto;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return Porto.class;
	}

	@Override
	public String getModelClassName() {
		return Porto.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("Cdinco", getCdinco());
		attributes.put("codicePorto", getCodicePorto());
		attributes.put("descrizione", getDescrizione());
		attributes.put("Incoterm", getIncoterm());
		attributes.put("codiceAzienda", getCodiceAzienda());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String Cdinco = (String)attributes.get("Cdinco");

		if (Cdinco != null) {
			setCdinco(Cdinco);
		}

		String codicePorto = (String)attributes.get("codicePorto");

		if (codicePorto != null) {
			setCodicePorto(codicePorto);
		}

		String descrizione = (String)attributes.get("descrizione");

		if (descrizione != null) {
			setDescrizione(descrizione);
		}

		String Incoterm = (String)attributes.get("Incoterm");

		if (Incoterm != null) {
			setIncoterm(Incoterm);
		}

		String codiceAzienda = (String)attributes.get("codiceAzienda");

		if (codiceAzienda != null) {
			setCodiceAzienda(codiceAzienda);
		}
	}

	@JSON
	@Override
	public String getCdinco() {
		if (_Cdinco == null) {
			return StringPool.BLANK;
		}
		else {
			return _Cdinco;
		}
	}

	@Override
	public void setCdinco(String Cdinco) {
		_Cdinco = Cdinco;
	}

	@JSON
	@Override
	public String getCodicePorto() {
		if (_codicePorto == null) {
			return StringPool.BLANK;
		}
		else {
			return _codicePorto;
		}
	}

	@Override
	public void setCodicePorto(String codicePorto) {
		_codicePorto = codicePorto;
	}

	@JSON
	@Override
	public String getDescrizione() {
		if (_descrizione == null) {
			return StringPool.BLANK;
		}
		else {
			return _descrizione;
		}
	}

	@Override
	public void setDescrizione(String descrizione) {
		_descrizione = descrizione;
	}

	@JSON
	@Override
	public String getIncoterm() {
		if (_Incoterm == null) {
			return StringPool.BLANK;
		}
		else {
			return _Incoterm;
		}
	}

	@Override
	public void setIncoterm(String Incoterm) {
		_Incoterm = Incoterm;
	}

	@JSON
	@Override
	public String getCodiceAzienda() {
		if (_codiceAzienda == null) {
			return StringPool.BLANK;
		}
		else {
			return _codiceAzienda;
		}
	}

	@Override
	public void setCodiceAzienda(String codiceAzienda) {
		_codiceAzienda = codiceAzienda;
	}

	@Override
	public Porto toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Porto)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PortoImpl portoImpl = new PortoImpl();

		portoImpl.setCdinco(getCdinco());
		portoImpl.setCodicePorto(getCodicePorto());
		portoImpl.setDescrizione(getDescrizione());
		portoImpl.setIncoterm(getIncoterm());
		portoImpl.setCodiceAzienda(getCodiceAzienda());

		portoImpl.resetOriginalValues();

		return portoImpl;
	}

	@Override
	public int compareTo(Porto porto) {
		String primaryKey = porto.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Porto)) {
			return false;
		}

		Porto porto = (Porto)obj;

		String primaryKey = porto.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Porto> toCacheModel() {
		PortoCacheModel portoCacheModel = new PortoCacheModel();

		portoCacheModel.Cdinco = getCdinco();

		String Cdinco = portoCacheModel.Cdinco;

		if ((Cdinco != null) && (Cdinco.length() == 0)) {
			portoCacheModel.Cdinco = null;
		}

		portoCacheModel.codicePorto = getCodicePorto();

		String codicePorto = portoCacheModel.codicePorto;

		if ((codicePorto != null) && (codicePorto.length() == 0)) {
			portoCacheModel.codicePorto = null;
		}

		portoCacheModel.descrizione = getDescrizione();

		String descrizione = portoCacheModel.descrizione;

		if ((descrizione != null) && (descrizione.length() == 0)) {
			portoCacheModel.descrizione = null;
		}

		portoCacheModel.Incoterm = getIncoterm();

		String Incoterm = portoCacheModel.Incoterm;

		if ((Incoterm != null) && (Incoterm.length() == 0)) {
			portoCacheModel.Incoterm = null;
		}

		portoCacheModel.codiceAzienda = getCodiceAzienda();

		String codiceAzienda = portoCacheModel.codiceAzienda;

		if ((codiceAzienda != null) && (codiceAzienda.length() == 0)) {
			portoCacheModel.codiceAzienda = null;
		}

		return portoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{Cdinco=");
		sb.append(getCdinco());
		sb.append(", codicePorto=");
		sb.append(getCodicePorto());
		sb.append(", descrizione=");
		sb.append(getDescrizione());
		sb.append(", Incoterm=");
		sb.append(getIncoterm());
		sb.append(", codiceAzienda=");
		sb.append(getCodiceAzienda());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("it.bysoftware.ct.model.Porto");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>Cdinco</column-name><column-value><![CDATA[");
		sb.append(getCdinco());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codicePorto</column-name><column-value><![CDATA[");
		sb.append(getCodicePorto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descrizione</column-name><column-value><![CDATA[");
		sb.append(getDescrizione());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Incoterm</column-name><column-value><![CDATA[");
		sb.append(getIncoterm());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codiceAzienda</column-name><column-value><![CDATA[");
		sb.append(getCodiceAzienda());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Porto.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Porto.class };
	private String _Cdinco;
	private String _codicePorto;
	private String _descrizione;
	private String _Incoterm;
	private String _codiceAzienda;
	private Porto _escapedModel;
}