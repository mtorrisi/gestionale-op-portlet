/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.bysoftware.ct.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import it.bysoftware.ct.model.DestinatariDiversi;
import it.bysoftware.ct.model.DestinatariDiversiModel;
import it.bysoftware.ct.model.DestinatariDiversiSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the DestinatariDiversi service. Represents a row in the &quot;DestinatariDiversi&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.bysoftware.ct.model.DestinatariDiversiModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DestinatariDiversiImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DestinatariDiversiImpl
 * @see it.bysoftware.ct.model.DestinatariDiversi
 * @see it.bysoftware.ct.model.DestinatariDiversiModel
 * @generated
 */
@JSON(strict = true)
public class DestinatariDiversiModelImpl extends BaseModelImpl<DestinatariDiversi>
	implements DestinatariDiversiModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a destinatari diversi model instance should use the {@link it.bysoftware.ct.model.DestinatariDiversi} interface instead.
	 */
	public static final String TABLE_NAME = "DestinatariDiversi";
	public static final Object[][] TABLE_COLUMNS = {
			{ "RavCodana", Types.VARCHAR },
			{ "RavCodrif", Types.VARCHAR },
			{ "RavCap", Types.VARCHAR },
			{ "RavComune", Types.VARCHAR },
			{ "RavIndiri", Types.VARCHAR },
			{ "RavSigpro", Types.VARCHAR },
			{ "RavSigsta", Types.VARCHAR },
			{ "RavTipana", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table DestinatariDiversi (RavCodana VARCHAR(75) not null primary key,RavCodrif VARCHAR(75) null,RavCap VARCHAR(75) null,RavComune VARCHAR(75) null,RavIndiri VARCHAR(75) null,RavSigpro VARCHAR(75) null,RavSigsta VARCHAR(75) null,RavTipana VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table DestinatariDiversi";
	public static final String ORDER_BY_JPQL = " ORDER BY destinatariDiversi.codiceAnagrafica ASC";
	public static final String ORDER_BY_SQL = " ORDER BY DestinatariDiversi.RavCodana ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.bysoftware.ct.model.DestinatariDiversi"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.bysoftware.ct.model.DestinatariDiversi"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.bysoftware.ct.model.DestinatariDiversi"),
			true);
	public static long CODICERIFERIMENTO_COLUMN_BITMASK = 1L;
	public static long CODICEANAGRAFICA_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static DestinatariDiversi toModel(DestinatariDiversiSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		DestinatariDiversi model = new DestinatariDiversiImpl();

		model.setCodiceAnagrafica(soapModel.getCodiceAnagrafica());
		model.setCodiceRiferimento(soapModel.getCodiceRiferimento());
		model.setCAP(soapModel.getCAP());
		model.setComune(soapModel.getComune());
		model.setIndirizzo(soapModel.getIndirizzo());
		model.setProvincia(soapModel.getProvincia());
		model.setStato(soapModel.getStato());
		model.setTipoAnagrafica(soapModel.getTipoAnagrafica());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<DestinatariDiversi> toModels(
		DestinatariDiversiSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<DestinatariDiversi> models = new ArrayList<DestinatariDiversi>(soapModels.length);

		for (DestinatariDiversiSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.bysoftware.ct.model.DestinatariDiversi"));

	public DestinatariDiversiModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _codiceAnagrafica;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setCodiceAnagrafica(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _codiceAnagrafica;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return DestinatariDiversi.class;
	}

	@Override
	public String getModelClassName() {
		return DestinatariDiversi.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("codiceAnagrafica", getCodiceAnagrafica());
		attributes.put("codiceRiferimento", getCodiceRiferimento());
		attributes.put("CAP", getCAP());
		attributes.put("comune", getComune());
		attributes.put("indirizzo", getIndirizzo());
		attributes.put("provincia", getProvincia());
		attributes.put("stato", getStato());
		attributes.put("tipoAnagrafica", getTipoAnagrafica());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String codiceAnagrafica = (String)attributes.get("codiceAnagrafica");

		if (codiceAnagrafica != null) {
			setCodiceAnagrafica(codiceAnagrafica);
		}

		String codiceRiferimento = (String)attributes.get("codiceRiferimento");

		if (codiceRiferimento != null) {
			setCodiceRiferimento(codiceRiferimento);
		}

		String CAP = (String)attributes.get("CAP");

		if (CAP != null) {
			setCAP(CAP);
		}

		String comune = (String)attributes.get("comune");

		if (comune != null) {
			setComune(comune);
		}

		String indirizzo = (String)attributes.get("indirizzo");

		if (indirizzo != null) {
			setIndirizzo(indirizzo);
		}

		String provincia = (String)attributes.get("provincia");

		if (provincia != null) {
			setProvincia(provincia);
		}

		String stato = (String)attributes.get("stato");

		if (stato != null) {
			setStato(stato);
		}

		String tipoAnagrafica = (String)attributes.get("tipoAnagrafica");

		if (tipoAnagrafica != null) {
			setTipoAnagrafica(tipoAnagrafica);
		}
	}

	@JSON
	@Override
	public String getCodiceAnagrafica() {
		if (_codiceAnagrafica == null) {
			return StringPool.BLANK;
		}
		else {
			return _codiceAnagrafica;
		}
	}

	@Override
	public void setCodiceAnagrafica(String codiceAnagrafica) {
		_codiceAnagrafica = codiceAnagrafica;
	}

	@JSON
	@Override
	public String getCodiceRiferimento() {
		if (_codiceRiferimento == null) {
			return StringPool.BLANK;
		}
		else {
			return _codiceRiferimento;
		}
	}

	@Override
	public void setCodiceRiferimento(String codiceRiferimento) {
		_columnBitmask |= CODICERIFERIMENTO_COLUMN_BITMASK;

		if (_originalCodiceRiferimento == null) {
			_originalCodiceRiferimento = _codiceRiferimento;
		}

		_codiceRiferimento = codiceRiferimento;
	}

	public String getOriginalCodiceRiferimento() {
		return GetterUtil.getString(_originalCodiceRiferimento);
	}

	@JSON
	@Override
	public String getCAP() {
		if (_CAP == null) {
			return StringPool.BLANK;
		}
		else {
			return _CAP;
		}
	}

	@Override
	public void setCAP(String CAP) {
		_CAP = CAP;
	}

	@JSON
	@Override
	public String getComune() {
		if (_comune == null) {
			return StringPool.BLANK;
		}
		else {
			return _comune;
		}
	}

	@Override
	public void setComune(String comune) {
		_comune = comune;
	}

	@JSON
	@Override
	public String getIndirizzo() {
		if (_indirizzo == null) {
			return StringPool.BLANK;
		}
		else {
			return _indirizzo;
		}
	}

	@Override
	public void setIndirizzo(String indirizzo) {
		_indirizzo = indirizzo;
	}

	@JSON
	@Override
	public String getProvincia() {
		if (_provincia == null) {
			return StringPool.BLANK;
		}
		else {
			return _provincia;
		}
	}

	@Override
	public void setProvincia(String provincia) {
		_provincia = provincia;
	}

	@JSON
	@Override
	public String getStato() {
		if (_stato == null) {
			return StringPool.BLANK;
		}
		else {
			return _stato;
		}
	}

	@Override
	public void setStato(String stato) {
		_stato = stato;
	}

	@JSON
	@Override
	public String getTipoAnagrafica() {
		if (_tipoAnagrafica == null) {
			return StringPool.BLANK;
		}
		else {
			return _tipoAnagrafica;
		}
	}

	@Override
	public void setTipoAnagrafica(String tipoAnagrafica) {
		_tipoAnagrafica = tipoAnagrafica;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public DestinatariDiversi toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DestinatariDiversi)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DestinatariDiversiImpl destinatariDiversiImpl = new DestinatariDiversiImpl();

		destinatariDiversiImpl.setCodiceAnagrafica(getCodiceAnagrafica());
		destinatariDiversiImpl.setCodiceRiferimento(getCodiceRiferimento());
		destinatariDiversiImpl.setCAP(getCAP());
		destinatariDiversiImpl.setComune(getComune());
		destinatariDiversiImpl.setIndirizzo(getIndirizzo());
		destinatariDiversiImpl.setProvincia(getProvincia());
		destinatariDiversiImpl.setStato(getStato());
		destinatariDiversiImpl.setTipoAnagrafica(getTipoAnagrafica());

		destinatariDiversiImpl.resetOriginalValues();

		return destinatariDiversiImpl;
	}

	@Override
	public int compareTo(DestinatariDiversi destinatariDiversi) {
		String primaryKey = destinatariDiversi.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DestinatariDiversi)) {
			return false;
		}

		DestinatariDiversi destinatariDiversi = (DestinatariDiversi)obj;

		String primaryKey = destinatariDiversi.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		DestinatariDiversiModelImpl destinatariDiversiModelImpl = this;

		destinatariDiversiModelImpl._originalCodiceRiferimento = destinatariDiversiModelImpl._codiceRiferimento;

		destinatariDiversiModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DestinatariDiversi> toCacheModel() {
		DestinatariDiversiCacheModel destinatariDiversiCacheModel = new DestinatariDiversiCacheModel();

		destinatariDiversiCacheModel.codiceAnagrafica = getCodiceAnagrafica();

		String codiceAnagrafica = destinatariDiversiCacheModel.codiceAnagrafica;

		if ((codiceAnagrafica != null) && (codiceAnagrafica.length() == 0)) {
			destinatariDiversiCacheModel.codiceAnagrafica = null;
		}

		destinatariDiversiCacheModel.codiceRiferimento = getCodiceRiferimento();

		String codiceRiferimento = destinatariDiversiCacheModel.codiceRiferimento;

		if ((codiceRiferimento != null) && (codiceRiferimento.length() == 0)) {
			destinatariDiversiCacheModel.codiceRiferimento = null;
		}

		destinatariDiversiCacheModel.CAP = getCAP();

		String CAP = destinatariDiversiCacheModel.CAP;

		if ((CAP != null) && (CAP.length() == 0)) {
			destinatariDiversiCacheModel.CAP = null;
		}

		destinatariDiversiCacheModel.comune = getComune();

		String comune = destinatariDiversiCacheModel.comune;

		if ((comune != null) && (comune.length() == 0)) {
			destinatariDiversiCacheModel.comune = null;
		}

		destinatariDiversiCacheModel.indirizzo = getIndirizzo();

		String indirizzo = destinatariDiversiCacheModel.indirizzo;

		if ((indirizzo != null) && (indirizzo.length() == 0)) {
			destinatariDiversiCacheModel.indirizzo = null;
		}

		destinatariDiversiCacheModel.provincia = getProvincia();

		String provincia = destinatariDiversiCacheModel.provincia;

		if ((provincia != null) && (provincia.length() == 0)) {
			destinatariDiversiCacheModel.provincia = null;
		}

		destinatariDiversiCacheModel.stato = getStato();

		String stato = destinatariDiversiCacheModel.stato;

		if ((stato != null) && (stato.length() == 0)) {
			destinatariDiversiCacheModel.stato = null;
		}

		destinatariDiversiCacheModel.tipoAnagrafica = getTipoAnagrafica();

		String tipoAnagrafica = destinatariDiversiCacheModel.tipoAnagrafica;

		if ((tipoAnagrafica != null) && (tipoAnagrafica.length() == 0)) {
			destinatariDiversiCacheModel.tipoAnagrafica = null;
		}

		return destinatariDiversiCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{codiceAnagrafica=");
		sb.append(getCodiceAnagrafica());
		sb.append(", codiceRiferimento=");
		sb.append(getCodiceRiferimento());
		sb.append(", CAP=");
		sb.append(getCAP());
		sb.append(", comune=");
		sb.append(getComune());
		sb.append(", indirizzo=");
		sb.append(getIndirizzo());
		sb.append(", provincia=");
		sb.append(getProvincia());
		sb.append(", stato=");
		sb.append(getStato());
		sb.append(", tipoAnagrafica=");
		sb.append(getTipoAnagrafica());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("it.bysoftware.ct.model.DestinatariDiversi");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>codiceAnagrafica</column-name><column-value><![CDATA[");
		sb.append(getCodiceAnagrafica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codiceRiferimento</column-name><column-value><![CDATA[");
		sb.append(getCodiceRiferimento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CAP</column-name><column-value><![CDATA[");
		sb.append(getCAP());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comune</column-name><column-value><![CDATA[");
		sb.append(getComune());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>indirizzo</column-name><column-value><![CDATA[");
		sb.append(getIndirizzo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>provincia</column-name><column-value><![CDATA[");
		sb.append(getProvincia());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stato</column-name><column-value><![CDATA[");
		sb.append(getStato());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoAnagrafica</column-name><column-value><![CDATA[");
		sb.append(getTipoAnagrafica());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DestinatariDiversi.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			DestinatariDiversi.class
		};
	private String _codiceAnagrafica;
	private String _codiceRiferimento;
	private String _originalCodiceRiferimento;
	private String _CAP;
	private String _comune;
	private String _indirizzo;
	private String _provincia;
	private String _stato;
	private String _tipoAnagrafica;
	private long _columnBitmask;
	private DestinatariDiversi _escapedModel;
}