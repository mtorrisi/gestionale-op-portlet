/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.bysoftware.ct.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import it.bysoftware.ct.model.DescrizioniDocumenti;
import it.bysoftware.ct.model.DescrizioniDocumentiModel;
import it.bysoftware.ct.model.DescrizioniDocumentiSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the DescrizioniDocumenti service. Represents a row in the &quot;DescrizioniDocumenti&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.bysoftware.ct.model.DescrizioniDocumentiModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DescrizioniDocumentiImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DescrizioniDocumentiImpl
 * @see it.bysoftware.ct.model.DescrizioniDocumenti
 * @see it.bysoftware.ct.model.DescrizioniDocumentiModel
 * @generated
 */
@JSON(strict = true)
public class DescrizioniDocumentiModelImpl extends BaseModelImpl<DescrizioniDocumenti>
	implements DescrizioniDocumentiModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a descrizioni documenti model instance should use the {@link it.bysoftware.ct.model.DescrizioniDocumenti} interface instead.
	 */
	public static final String TABLE_NAME = "DescrizioniDocumenti";
	public static final Object[][] TABLE_COLUMNS = {
			{ "Re1Coddes", Types.VARCHAR },
			{ "Re1Codiva", Types.VARCHAR },
			{ "Re1Descri", Types.VARCHAR },
			{ "Re1Desfis", Types.VARCHAR },
			{ "Re1Codiaz", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table DescrizioniDocumenti (Re1Coddes VARCHAR(75) not null primary key,Re1Codiva VARCHAR(75) null,Re1Descri VARCHAR(75) null,Re1Desfis VARCHAR(75) null,Re1Codiaz VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table DescrizioniDocumenti";
	public static final String ORDER_BY_JPQL = " ORDER BY descrizioniDocumenti.codiceDescrizione ASC";
	public static final String ORDER_BY_SQL = " ORDER BY DescrizioniDocumenti.Re1Coddes ASC";
	public static final String DATA_SOURCE = "gestionaleOPDataSource";
	public static final String SESSION_FACTORY = "gestionaleOPSessionFactory";
	public static final String TX_MANAGER = "gestionaleOPTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.bysoftware.ct.model.DescrizioniDocumenti"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.bysoftware.ct.model.DescrizioniDocumenti"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static DescrizioniDocumenti toModel(
		DescrizioniDocumentiSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		DescrizioniDocumenti model = new DescrizioniDocumentiImpl();

		model.setCodiceDescrizione(soapModel.getCodiceDescrizione());
		model.setCodiceIVA(soapModel.getCodiceIVA());
		model.setDescrizione(soapModel.getDescrizione());
		model.setDescrizioneFiscale(soapModel.getDescrizioneFiscale());
		model.setCodiceAzienda(soapModel.getCodiceAzienda());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<DescrizioniDocumenti> toModels(
		DescrizioniDocumentiSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<DescrizioniDocumenti> models = new ArrayList<DescrizioniDocumenti>(soapModels.length);

		for (DescrizioniDocumentiSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.bysoftware.ct.model.DescrizioniDocumenti"));

	public DescrizioniDocumentiModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _codiceDescrizione;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setCodiceDescrizione(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _codiceDescrizione;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return DescrizioniDocumenti.class;
	}

	@Override
	public String getModelClassName() {
		return DescrizioniDocumenti.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("codiceDescrizione", getCodiceDescrizione());
		attributes.put("codiceIVA", getCodiceIVA());
		attributes.put("descrizione", getDescrizione());
		attributes.put("descrizioneFiscale", getDescrizioneFiscale());
		attributes.put("codiceAzienda", getCodiceAzienda());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String codiceDescrizione = (String)attributes.get("codiceDescrizione");

		if (codiceDescrizione != null) {
			setCodiceDescrizione(codiceDescrizione);
		}

		String codiceIVA = (String)attributes.get("codiceIVA");

		if (codiceIVA != null) {
			setCodiceIVA(codiceIVA);
		}

		String descrizione = (String)attributes.get("descrizione");

		if (descrizione != null) {
			setDescrizione(descrizione);
		}

		String descrizioneFiscale = (String)attributes.get("descrizioneFiscale");

		if (descrizioneFiscale != null) {
			setDescrizioneFiscale(descrizioneFiscale);
		}

		String codiceAzienda = (String)attributes.get("codiceAzienda");

		if (codiceAzienda != null) {
			setCodiceAzienda(codiceAzienda);
		}
	}

	@JSON
	@Override
	public String getCodiceDescrizione() {
		if (_codiceDescrizione == null) {
			return StringPool.BLANK;
		}
		else {
			return _codiceDescrizione;
		}
	}

	@Override
	public void setCodiceDescrizione(String codiceDescrizione) {
		_codiceDescrizione = codiceDescrizione;
	}

	@JSON
	@Override
	public String getCodiceIVA() {
		if (_codiceIVA == null) {
			return StringPool.BLANK;
		}
		else {
			return _codiceIVA;
		}
	}

	@Override
	public void setCodiceIVA(String codiceIVA) {
		_codiceIVA = codiceIVA;
	}

	@JSON
	@Override
	public String getDescrizione() {
		if (_descrizione == null) {
			return StringPool.BLANK;
		}
		else {
			return _descrizione;
		}
	}

	@Override
	public void setDescrizione(String descrizione) {
		_descrizione = descrizione;
	}

	@JSON
	@Override
	public String getDescrizioneFiscale() {
		if (_descrizioneFiscale == null) {
			return StringPool.BLANK;
		}
		else {
			return _descrizioneFiscale;
		}
	}

	@Override
	public void setDescrizioneFiscale(String descrizioneFiscale) {
		_descrizioneFiscale = descrizioneFiscale;
	}

	@JSON
	@Override
	public String getCodiceAzienda() {
		if (_codiceAzienda == null) {
			return StringPool.BLANK;
		}
		else {
			return _codiceAzienda;
		}
	}

	@Override
	public void setCodiceAzienda(String codiceAzienda) {
		_codiceAzienda = codiceAzienda;
	}

	@Override
	public DescrizioniDocumenti toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DescrizioniDocumenti)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DescrizioniDocumentiImpl descrizioniDocumentiImpl = new DescrizioniDocumentiImpl();

		descrizioniDocumentiImpl.setCodiceDescrizione(getCodiceDescrizione());
		descrizioniDocumentiImpl.setCodiceIVA(getCodiceIVA());
		descrizioniDocumentiImpl.setDescrizione(getDescrizione());
		descrizioniDocumentiImpl.setDescrizioneFiscale(getDescrizioneFiscale());
		descrizioniDocumentiImpl.setCodiceAzienda(getCodiceAzienda());

		descrizioniDocumentiImpl.resetOriginalValues();

		return descrizioniDocumentiImpl;
	}

	@Override
	public int compareTo(DescrizioniDocumenti descrizioniDocumenti) {
		String primaryKey = descrizioniDocumenti.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DescrizioniDocumenti)) {
			return false;
		}

		DescrizioniDocumenti descrizioniDocumenti = (DescrizioniDocumenti)obj;

		String primaryKey = descrizioniDocumenti.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<DescrizioniDocumenti> toCacheModel() {
		DescrizioniDocumentiCacheModel descrizioniDocumentiCacheModel = new DescrizioniDocumentiCacheModel();

		descrizioniDocumentiCacheModel.codiceDescrizione = getCodiceDescrizione();

		String codiceDescrizione = descrizioniDocumentiCacheModel.codiceDescrizione;

		if ((codiceDescrizione != null) && (codiceDescrizione.length() == 0)) {
			descrizioniDocumentiCacheModel.codiceDescrizione = null;
		}

		descrizioniDocumentiCacheModel.codiceIVA = getCodiceIVA();

		String codiceIVA = descrizioniDocumentiCacheModel.codiceIVA;

		if ((codiceIVA != null) && (codiceIVA.length() == 0)) {
			descrizioniDocumentiCacheModel.codiceIVA = null;
		}

		descrizioniDocumentiCacheModel.descrizione = getDescrizione();

		String descrizione = descrizioniDocumentiCacheModel.descrizione;

		if ((descrizione != null) && (descrizione.length() == 0)) {
			descrizioniDocumentiCacheModel.descrizione = null;
		}

		descrizioniDocumentiCacheModel.descrizioneFiscale = getDescrizioneFiscale();

		String descrizioneFiscale = descrizioniDocumentiCacheModel.descrizioneFiscale;

		if ((descrizioneFiscale != null) && (descrizioneFiscale.length() == 0)) {
			descrizioniDocumentiCacheModel.descrizioneFiscale = null;
		}

		descrizioniDocumentiCacheModel.codiceAzienda = getCodiceAzienda();

		String codiceAzienda = descrizioniDocumentiCacheModel.codiceAzienda;

		if ((codiceAzienda != null) && (codiceAzienda.length() == 0)) {
			descrizioniDocumentiCacheModel.codiceAzienda = null;
		}

		return descrizioniDocumentiCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{codiceDescrizione=");
		sb.append(getCodiceDescrizione());
		sb.append(", codiceIVA=");
		sb.append(getCodiceIVA());
		sb.append(", descrizione=");
		sb.append(getDescrizione());
		sb.append(", descrizioneFiscale=");
		sb.append(getDescrizioneFiscale());
		sb.append(", codiceAzienda=");
		sb.append(getCodiceAzienda());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("it.bysoftware.ct.model.DescrizioniDocumenti");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>codiceDescrizione</column-name><column-value><![CDATA[");
		sb.append(getCodiceDescrizione());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codiceIVA</column-name><column-value><![CDATA[");
		sb.append(getCodiceIVA());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descrizione</column-name><column-value><![CDATA[");
		sb.append(getDescrizione());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descrizioneFiscale</column-name><column-value><![CDATA[");
		sb.append(getDescrizioneFiscale());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codiceAzienda</column-name><column-value><![CDATA[");
		sb.append(getCodiceAzienda());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DescrizioniDocumenti.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			DescrizioniDocumenti.class
		};
	private String _codiceDescrizione;
	private String _codiceIVA;
	private String _descrizione;
	private String _descrizioneFiscale;
	private String _codiceAzienda;
	private DescrizioniDocumenti _escapedModel;
}