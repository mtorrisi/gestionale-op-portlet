/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.bysoftware.ct.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import it.bysoftware.ct.model.Anagrafica;
import it.bysoftware.ct.model.AnagraficaModel;
import it.bysoftware.ct.model.AnagraficaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Anagrafica service. Represents a row in the &quot;AnagraficheClientiFornitori&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.bysoftware.ct.model.AnagraficaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AnagraficaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AnagraficaImpl
 * @see it.bysoftware.ct.model.Anagrafica
 * @see it.bysoftware.ct.model.AnagraficaModel
 * @generated
 */
@JSON(strict = true)
public class AnagraficaModelImpl extends BaseModelImpl<Anagrafica>
	implements AnagraficaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a anagrafica model instance should use the {@link it.bysoftware.ct.model.Anagrafica} interface instead.
	 */
	public static final String TABLE_NAME = "AnagraficheClientiFornitori";
	public static final Object[][] TABLE_COLUMNS = {
			{ "RacAttivoEC", Types.INTEGER },
			{ "RacCap", Types.VARCHAR },
			{ "RacCodana", Types.VARCHAR },
			{ "RacCodfis", Types.VARCHAR },
			{ "RacCodmne", Types.VARCHAR },
			{ "RacComune", Types.VARCHAR },
			{ "RacIndiri", Types.VARCHAR },
			{ "RacNote", Types.VARCHAR },
			{ "RacPariva", Types.VARCHAR },
			{ "RacRagso1", Types.VARCHAR },
			{ "RacRagso2", Types.VARCHAR },
			{ "RacSigpro", Types.VARCHAR },
			{ "RacSigsta", Types.VARCHAR },
			{ "RacTepefi", Types.INTEGER },
			{ "RacTipoSoggetto", Types.VARCHAR },
			{ "RacTipsol", Types.INTEGER },
			{ "RacCodiaz", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table AnagraficheClientiFornitori (RacAttivoEC INTEGER,RacCap VARCHAR(75) null,RacCodana VARCHAR(75) not null primary key,RacCodfis VARCHAR(75) null,RacCodmne VARCHAR(75) null,RacComune VARCHAR(75) null,RacIndiri VARCHAR(75) null,RacNote VARCHAR(75) null,RacPariva VARCHAR(75) null,RacRagso1 VARCHAR(75) null,RacRagso2 VARCHAR(75) null,RacSigpro VARCHAR(75) null,RacSigsta VARCHAR(75) null,RacTepefi INTEGER,RacTipoSoggetto VARCHAR(75) null,RacTipsol INTEGER,RacCodiaz VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table AnagraficheClientiFornitori";
	public static final String ORDER_BY_JPQL = " ORDER BY anagrafica.codiceAnagrafica ASC";
	public static final String ORDER_BY_SQL = " ORDER BY AnagraficheClientiFornitori.RacCodana ASC";
	public static final String DATA_SOURCE = "gestionaleOPDataSource";
	public static final String SESSION_FACTORY = "gestionaleOPSessionFactory";
	public static final String TX_MANAGER = "gestionaleOPTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.bysoftware.ct.model.Anagrafica"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.bysoftware.ct.model.Anagrafica"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.bysoftware.ct.model.Anagrafica"),
			true);
	public static long TIPOSOGGETTO_COLUMN_BITMASK = 1L;
	public static long CODICEANAGRAFICA_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Anagrafica toModel(AnagraficaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Anagrafica model = new AnagraficaImpl();

		model.setAttivoEC(soapModel.getAttivoEC());
		model.setCap(soapModel.getCap());
		model.setCodiceAnagrafica(soapModel.getCodiceAnagrafica());
		model.setCodiceFiscale(soapModel.getCodiceFiscale());
		model.setCodiceMne(soapModel.getCodiceMne());
		model.setComune(soapModel.getComune());
		model.setIndirizzo(soapModel.getIndirizzo());
		model.setNote(soapModel.getNote());
		model.setPartitaIVA(soapModel.getPartitaIVA());
		model.setRagioneSociale(soapModel.getRagioneSociale());
		model.setRagioneSocialeAlternativa(soapModel.getRagioneSocialeAlternativa());
		model.setProvincia(soapModel.getProvincia());
		model.setStato(soapModel.getStato());
		model.setTepefi(soapModel.getTepefi());
		model.setTipoSoggetto(soapModel.getTipoSoggetto());
		model.setTipsol(soapModel.getTipsol());
		model.setCodiceAzienda(soapModel.getCodiceAzienda());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Anagrafica> toModels(AnagraficaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Anagrafica> models = new ArrayList<Anagrafica>(soapModels.length);

		for (AnagraficaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.bysoftware.ct.model.Anagrafica"));

	public AnagraficaModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _codiceAnagrafica;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setCodiceAnagrafica(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _codiceAnagrafica;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return Anagrafica.class;
	}

	@Override
	public String getModelClassName() {
		return Anagrafica.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("attivoEC", getAttivoEC());
		attributes.put("cap", getCap());
		attributes.put("codiceAnagrafica", getCodiceAnagrafica());
		attributes.put("codiceFiscale", getCodiceFiscale());
		attributes.put("codiceMne", getCodiceMne());
		attributes.put("comune", getComune());
		attributes.put("Indirizzo", getIndirizzo());
		attributes.put("note", getNote());
		attributes.put("partitaIVA", getPartitaIVA());
		attributes.put("ragioneSociale", getRagioneSociale());
		attributes.put("ragioneSocialeAlternativa",
			getRagioneSocialeAlternativa());
		attributes.put("provincia", getProvincia());
		attributes.put("stato", getStato());
		attributes.put("tepefi", getTepefi());
		attributes.put("tipoSoggetto", getTipoSoggetto());
		attributes.put("tipsol", getTipsol());
		attributes.put("codiceAzienda", getCodiceAzienda());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer attivoEC = (Integer)attributes.get("attivoEC");

		if (attivoEC != null) {
			setAttivoEC(attivoEC);
		}

		String cap = (String)attributes.get("cap");

		if (cap != null) {
			setCap(cap);
		}

		String codiceAnagrafica = (String)attributes.get("codiceAnagrafica");

		if (codiceAnagrafica != null) {
			setCodiceAnagrafica(codiceAnagrafica);
		}

		String codiceFiscale = (String)attributes.get("codiceFiscale");

		if (codiceFiscale != null) {
			setCodiceFiscale(codiceFiscale);
		}

		String codiceMne = (String)attributes.get("codiceMne");

		if (codiceMne != null) {
			setCodiceMne(codiceMne);
		}

		String comune = (String)attributes.get("comune");

		if (comune != null) {
			setComune(comune);
		}

		String Indirizzo = (String)attributes.get("Indirizzo");

		if (Indirizzo != null) {
			setIndirizzo(Indirizzo);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}

		String partitaIVA = (String)attributes.get("partitaIVA");

		if (partitaIVA != null) {
			setPartitaIVA(partitaIVA);
		}

		String ragioneSociale = (String)attributes.get("ragioneSociale");

		if (ragioneSociale != null) {
			setRagioneSociale(ragioneSociale);
		}

		String ragioneSocialeAlternativa = (String)attributes.get(
				"ragioneSocialeAlternativa");

		if (ragioneSocialeAlternativa != null) {
			setRagioneSocialeAlternativa(ragioneSocialeAlternativa);
		}

		String provincia = (String)attributes.get("provincia");

		if (provincia != null) {
			setProvincia(provincia);
		}

		String stato = (String)attributes.get("stato");

		if (stato != null) {
			setStato(stato);
		}

		Integer tepefi = (Integer)attributes.get("tepefi");

		if (tepefi != null) {
			setTepefi(tepefi);
		}

		String tipoSoggetto = (String)attributes.get("tipoSoggetto");

		if (tipoSoggetto != null) {
			setTipoSoggetto(tipoSoggetto);
		}

		Integer tipsol = (Integer)attributes.get("tipsol");

		if (tipsol != null) {
			setTipsol(tipsol);
		}

		String codiceAzienda = (String)attributes.get("codiceAzienda");

		if (codiceAzienda != null) {
			setCodiceAzienda(codiceAzienda);
		}
	}

	@JSON
	@Override
	public int getAttivoEC() {
		return _attivoEC;
	}

	@Override
	public void setAttivoEC(int attivoEC) {
		_attivoEC = attivoEC;
	}

	@JSON
	@Override
	public String getCap() {
		if (_cap == null) {
			return StringPool.BLANK;
		}
		else {
			return _cap;
		}
	}

	@Override
	public void setCap(String cap) {
		_cap = cap;
	}

	@JSON
	@Override
	public String getCodiceAnagrafica() {
		if (_codiceAnagrafica == null) {
			return StringPool.BLANK;
		}
		else {
			return _codiceAnagrafica;
		}
	}

	@Override
	public void setCodiceAnagrafica(String codiceAnagrafica) {
		_codiceAnagrafica = codiceAnagrafica;
	}

	@JSON
	@Override
	public String getCodiceFiscale() {
		if (_codiceFiscale == null) {
			return StringPool.BLANK;
		}
		else {
			return _codiceFiscale;
		}
	}

	@Override
	public void setCodiceFiscale(String codiceFiscale) {
		_codiceFiscale = codiceFiscale;
	}

	@JSON
	@Override
	public String getCodiceMne() {
		if (_codiceMne == null) {
			return StringPool.BLANK;
		}
		else {
			return _codiceMne;
		}
	}

	@Override
	public void setCodiceMne(String codiceMne) {
		_codiceMne = codiceMne;
	}

	@JSON
	@Override
	public String getComune() {
		if (_comune == null) {
			return StringPool.BLANK;
		}
		else {
			return _comune;
		}
	}

	@Override
	public void setComune(String comune) {
		_comune = comune;
	}

	@JSON
	@Override
	public String getIndirizzo() {
		if (_Indirizzo == null) {
			return StringPool.BLANK;
		}
		else {
			return _Indirizzo;
		}
	}

	@Override
	public void setIndirizzo(String Indirizzo) {
		_Indirizzo = Indirizzo;
	}

	@JSON
	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@JSON
	@Override
	public String getPartitaIVA() {
		if (_partitaIVA == null) {
			return StringPool.BLANK;
		}
		else {
			return _partitaIVA;
		}
	}

	@Override
	public void setPartitaIVA(String partitaIVA) {
		_partitaIVA = partitaIVA;
	}

	@JSON
	@Override
	public String getRagioneSociale() {
		if (_ragioneSociale == null) {
			return StringPool.BLANK;
		}
		else {
			return _ragioneSociale;
		}
	}

	@Override
	public void setRagioneSociale(String ragioneSociale) {
		_ragioneSociale = ragioneSociale;
	}

	@JSON
	@Override
	public String getRagioneSocialeAlternativa() {
		if (_ragioneSocialeAlternativa == null) {
			return StringPool.BLANK;
		}
		else {
			return _ragioneSocialeAlternativa;
		}
	}

	@Override
	public void setRagioneSocialeAlternativa(String ragioneSocialeAlternativa) {
		_ragioneSocialeAlternativa = ragioneSocialeAlternativa;
	}

	@JSON
	@Override
	public String getProvincia() {
		if (_provincia == null) {
			return StringPool.BLANK;
		}
		else {
			return _provincia;
		}
	}

	@Override
	public void setProvincia(String provincia) {
		_provincia = provincia;
	}

	@JSON
	@Override
	public String getStato() {
		if (_stato == null) {
			return StringPool.BLANK;
		}
		else {
			return _stato;
		}
	}

	@Override
	public void setStato(String stato) {
		_stato = stato;
	}

	@JSON
	@Override
	public int getTepefi() {
		return _tepefi;
	}

	@Override
	public void setTepefi(int tepefi) {
		_tepefi = tepefi;
	}

	@JSON
	@Override
	public String getTipoSoggetto() {
		if (_tipoSoggetto == null) {
			return StringPool.BLANK;
		}
		else {
			return _tipoSoggetto;
		}
	}

	@Override
	public void setTipoSoggetto(String tipoSoggetto) {
		_columnBitmask |= TIPOSOGGETTO_COLUMN_BITMASK;

		if (_originalTipoSoggetto == null) {
			_originalTipoSoggetto = _tipoSoggetto;
		}

		_tipoSoggetto = tipoSoggetto;
	}

	public String getOriginalTipoSoggetto() {
		return GetterUtil.getString(_originalTipoSoggetto);
	}

	@JSON
	@Override
	public int getTipsol() {
		return _tipsol;
	}

	@Override
	public void setTipsol(int tipsol) {
		_tipsol = tipsol;
	}

	@JSON
	@Override
	public String getCodiceAzienda() {
		if (_codiceAzienda == null) {
			return StringPool.BLANK;
		}
		else {
			return _codiceAzienda;
		}
	}

	@Override
	public void setCodiceAzienda(String codiceAzienda) {
		_codiceAzienda = codiceAzienda;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Anagrafica toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Anagrafica)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AnagraficaImpl anagraficaImpl = new AnagraficaImpl();

		anagraficaImpl.setAttivoEC(getAttivoEC());
		anagraficaImpl.setCap(getCap());
		anagraficaImpl.setCodiceAnagrafica(getCodiceAnagrafica());
		anagraficaImpl.setCodiceFiscale(getCodiceFiscale());
		anagraficaImpl.setCodiceMne(getCodiceMne());
		anagraficaImpl.setComune(getComune());
		anagraficaImpl.setIndirizzo(getIndirizzo());
		anagraficaImpl.setNote(getNote());
		anagraficaImpl.setPartitaIVA(getPartitaIVA());
		anagraficaImpl.setRagioneSociale(getRagioneSociale());
		anagraficaImpl.setRagioneSocialeAlternativa(getRagioneSocialeAlternativa());
		anagraficaImpl.setProvincia(getProvincia());
		anagraficaImpl.setStato(getStato());
		anagraficaImpl.setTepefi(getTepefi());
		anagraficaImpl.setTipoSoggetto(getTipoSoggetto());
		anagraficaImpl.setTipsol(getTipsol());
		anagraficaImpl.setCodiceAzienda(getCodiceAzienda());

		anagraficaImpl.resetOriginalValues();

		return anagraficaImpl;
	}

	@Override
	public int compareTo(Anagrafica anagrafica) {
		String primaryKey = anagrafica.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Anagrafica)) {
			return false;
		}

		Anagrafica anagrafica = (Anagrafica)obj;

		String primaryKey = anagrafica.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		AnagraficaModelImpl anagraficaModelImpl = this;

		anagraficaModelImpl._originalTipoSoggetto = anagraficaModelImpl._tipoSoggetto;

		anagraficaModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Anagrafica> toCacheModel() {
		AnagraficaCacheModel anagraficaCacheModel = new AnagraficaCacheModel();

		anagraficaCacheModel.attivoEC = getAttivoEC();

		anagraficaCacheModel.cap = getCap();

		String cap = anagraficaCacheModel.cap;

		if ((cap != null) && (cap.length() == 0)) {
			anagraficaCacheModel.cap = null;
		}

		anagraficaCacheModel.codiceAnagrafica = getCodiceAnagrafica();

		String codiceAnagrafica = anagraficaCacheModel.codiceAnagrafica;

		if ((codiceAnagrafica != null) && (codiceAnagrafica.length() == 0)) {
			anagraficaCacheModel.codiceAnagrafica = null;
		}

		anagraficaCacheModel.codiceFiscale = getCodiceFiscale();

		String codiceFiscale = anagraficaCacheModel.codiceFiscale;

		if ((codiceFiscale != null) && (codiceFiscale.length() == 0)) {
			anagraficaCacheModel.codiceFiscale = null;
		}

		anagraficaCacheModel.codiceMne = getCodiceMne();

		String codiceMne = anagraficaCacheModel.codiceMne;

		if ((codiceMne != null) && (codiceMne.length() == 0)) {
			anagraficaCacheModel.codiceMne = null;
		}

		anagraficaCacheModel.comune = getComune();

		String comune = anagraficaCacheModel.comune;

		if ((comune != null) && (comune.length() == 0)) {
			anagraficaCacheModel.comune = null;
		}

		anagraficaCacheModel.Indirizzo = getIndirizzo();

		String Indirizzo = anagraficaCacheModel.Indirizzo;

		if ((Indirizzo != null) && (Indirizzo.length() == 0)) {
			anagraficaCacheModel.Indirizzo = null;
		}

		anagraficaCacheModel.note = getNote();

		String note = anagraficaCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			anagraficaCacheModel.note = null;
		}

		anagraficaCacheModel.partitaIVA = getPartitaIVA();

		String partitaIVA = anagraficaCacheModel.partitaIVA;

		if ((partitaIVA != null) && (partitaIVA.length() == 0)) {
			anagraficaCacheModel.partitaIVA = null;
		}

		anagraficaCacheModel.ragioneSociale = getRagioneSociale();

		String ragioneSociale = anagraficaCacheModel.ragioneSociale;

		if ((ragioneSociale != null) && (ragioneSociale.length() == 0)) {
			anagraficaCacheModel.ragioneSociale = null;
		}

		anagraficaCacheModel.ragioneSocialeAlternativa = getRagioneSocialeAlternativa();

		String ragioneSocialeAlternativa = anagraficaCacheModel.ragioneSocialeAlternativa;

		if ((ragioneSocialeAlternativa != null) &&
				(ragioneSocialeAlternativa.length() == 0)) {
			anagraficaCacheModel.ragioneSocialeAlternativa = null;
		}

		anagraficaCacheModel.provincia = getProvincia();

		String provincia = anagraficaCacheModel.provincia;

		if ((provincia != null) && (provincia.length() == 0)) {
			anagraficaCacheModel.provincia = null;
		}

		anagraficaCacheModel.stato = getStato();

		String stato = anagraficaCacheModel.stato;

		if ((stato != null) && (stato.length() == 0)) {
			anagraficaCacheModel.stato = null;
		}

		anagraficaCacheModel.tepefi = getTepefi();

		anagraficaCacheModel.tipoSoggetto = getTipoSoggetto();

		String tipoSoggetto = anagraficaCacheModel.tipoSoggetto;

		if ((tipoSoggetto != null) && (tipoSoggetto.length() == 0)) {
			anagraficaCacheModel.tipoSoggetto = null;
		}

		anagraficaCacheModel.tipsol = getTipsol();

		anagraficaCacheModel.codiceAzienda = getCodiceAzienda();

		String codiceAzienda = anagraficaCacheModel.codiceAzienda;

		if ((codiceAzienda != null) && (codiceAzienda.length() == 0)) {
			anagraficaCacheModel.codiceAzienda = null;
		}

		return anagraficaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{attivoEC=");
		sb.append(getAttivoEC());
		sb.append(", cap=");
		sb.append(getCap());
		sb.append(", codiceAnagrafica=");
		sb.append(getCodiceAnagrafica());
		sb.append(", codiceFiscale=");
		sb.append(getCodiceFiscale());
		sb.append(", codiceMne=");
		sb.append(getCodiceMne());
		sb.append(", comune=");
		sb.append(getComune());
		sb.append(", Indirizzo=");
		sb.append(getIndirizzo());
		sb.append(", note=");
		sb.append(getNote());
		sb.append(", partitaIVA=");
		sb.append(getPartitaIVA());
		sb.append(", ragioneSociale=");
		sb.append(getRagioneSociale());
		sb.append(", ragioneSocialeAlternativa=");
		sb.append(getRagioneSocialeAlternativa());
		sb.append(", provincia=");
		sb.append(getProvincia());
		sb.append(", stato=");
		sb.append(getStato());
		sb.append(", tepefi=");
		sb.append(getTepefi());
		sb.append(", tipoSoggetto=");
		sb.append(getTipoSoggetto());
		sb.append(", tipsol=");
		sb.append(getTipsol());
		sb.append(", codiceAzienda=");
		sb.append(getCodiceAzienda());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("it.bysoftware.ct.model.Anagrafica");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>attivoEC</column-name><column-value><![CDATA[");
		sb.append(getAttivoEC());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cap</column-name><column-value><![CDATA[");
		sb.append(getCap());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codiceAnagrafica</column-name><column-value><![CDATA[");
		sb.append(getCodiceAnagrafica());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codiceFiscale</column-name><column-value><![CDATA[");
		sb.append(getCodiceFiscale());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codiceMne</column-name><column-value><![CDATA[");
		sb.append(getCodiceMne());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comune</column-name><column-value><![CDATA[");
		sb.append(getComune());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Indirizzo</column-name><column-value><![CDATA[");
		sb.append(getIndirizzo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>partitaIVA</column-name><column-value><![CDATA[");
		sb.append(getPartitaIVA());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ragioneSociale</column-name><column-value><![CDATA[");
		sb.append(getRagioneSociale());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ragioneSocialeAlternativa</column-name><column-value><![CDATA[");
		sb.append(getRagioneSocialeAlternativa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>provincia</column-name><column-value><![CDATA[");
		sb.append(getProvincia());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stato</column-name><column-value><![CDATA[");
		sb.append(getStato());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tepefi</column-name><column-value><![CDATA[");
		sb.append(getTepefi());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoSoggetto</column-name><column-value><![CDATA[");
		sb.append(getTipoSoggetto());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipsol</column-name><column-value><![CDATA[");
		sb.append(getTipsol());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codiceAzienda</column-name><column-value><![CDATA[");
		sb.append(getCodiceAzienda());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Anagrafica.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Anagrafica.class
		};
	private int _attivoEC;
	private String _cap;
	private String _codiceAnagrafica;
	private String _codiceFiscale;
	private String _codiceMne;
	private String _comune;
	private String _Indirizzo;
	private String _note;
	private String _partitaIVA;
	private String _ragioneSociale;
	private String _ragioneSocialeAlternativa;
	private String _provincia;
	private String _stato;
	private int _tepefi;
	private String _tipoSoggetto;
	private String _originalTipoSoggetto;
	private int _tipsol;
	private String _codiceAzienda;
	private long _columnBitmask;
	private Anagrafica _escapedModel;
}